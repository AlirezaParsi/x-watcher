name: Build x-watcher for Android ARM64 and ARM32

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch: # Allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install Java (required for Android SDK/NDK tools)
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      # Install Android NDK
      - name: Install Android NDK
        run: |
          # Install Android SDK command-line tools
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O sdk-tools.zip
          unzip -q sdk-tools.zip -d android-sdk
          export ANDROID_HOME=$PWD/android-sdk
          export PATH=$ANDROID_HOME/cmdline-tools/bin:$PATH
          # Accept licenses and install NDK
          yes | sdkmanager --sdk_root=$ANDROID_HOME "ndk;26.1.10909125"
          echo "ANDROID_NDK_HOME=$ANDROID_HOME/ndk/26.1.10909125" >> $GITHUB_ENV

      # Build for ARM64 (arm64-v8a)
      - name: Build for ARM64
        run: |
          export NDK=$ANDROID_NDK_HOME
          export TOOLCHAIN=$NDK/toolchains/llvm/prebuilt/linux-x86_64
          export TARGET=aarch64-linux-android
          export API=21
          export CC=$TOOLCHAIN/bin/${TARGET}${API}-clang
          export CXX=$TOOLCHAIN/bin/${TARGET}${API}-clang++
          export AR=$TOOLCHAIN/bin/llvm-ar
          export RANLIB=$TOOLCHAIN/bin/llvm-ranlib
          export CFLAGS="-fPIC -O2 -DANDROID -I$NDK/sysroot/usr/include"
          export LDFLAGS="-L$NDK/sysroot/usr/lib/aarch64-linux-android/$API"
          mkdir -p build/arm64-v8a
          $CC $CFLAGS -c x-watcher.c -o build/arm64-v8a/x-watcher.o -pthread
          $AR rcs build/arm64-v8a/libx-watcher.a build/arm64-v8a/x-watcher.o

      # Build for ARM32 (armeabi-v7a)
      - name: Build for ARM32
        run: |
          export NDK=$ANDROID_NDK_HOME
          export TOOLCHAIN=$NDK/toolchains/llvm/prebuilt/linux-x86_64
          export TARGET=armv7a-linux-androideabi
          export API=21
          export CC=$TOOLCHAIN/bin/${TARGET}${API}-clang
          export CXX=$TOOLCHAIN/bin/${TARGET}${API}-clang++
          export AR=$TOOLCHAIN/bin/llvm-ar
          export RANLIB=$TOOLCHAIN/bin/llvm-ranlib
          export CFLAGS="-fPIC -O2 -DANDROID -I$NDK/sysroot/usr/include"
          export LDFLAGS="-L$NDK/sysroot/usr/lib/arm-linux-androideabi/$API"
          mkdir -p build/armeabi-v7a
          $CC $CFLAGS -c x-watcher.c -o build/armeabi-v7a/x-watcher.o -pthread
          $AR rcs build/armeabi-v7a/libx-watcher.a build/armeabi-v7a/x-watcher.o

      # Upload artifacts
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: x-watcher-libs
          path: |
            build/arm64-v8a/libx-watcher.a
            build/armeabi-v7a/libx-watcher.a
            x-watcher.h
